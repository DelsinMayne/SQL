# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into and performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table and explored the data using the following SQL.


# I determined the average danceability and energy of each artist.

SELECT artist_name, ROUND(AVG(danceability), 3)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(danceability) desc;

# Then I determined who the top 10 artists are by average popularity.

SELECT artist_name, AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) desc
LIMIT 10;

# I figured out what artist created the longest song and what the duration was.

SELECT artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;

# I determined the average tempo of songs with a populartity of at least 90.

SELECT AVG(tempo)
FROM BIT_DB.Spotifydata
WHERE popularity >= 90;

# I used a CTE to determine the top artists based on average popularity and labeled them as a 'Top Star'.

WITH popularity_average_CTE AS(
    SELECT artist_name, AVG(popularity) AS average_popularity
    FROM Spotifydata
    GROUP BY artist_name)

SELECT artist_name, average_popularity, 'Top Star' AS tag
FROM popularity_average_CTE
Where average_popularity >= 90;


